plot(c(100, 250), c(300, 450), type = "n", xlab = "", ylab = "")
op <- par(bg = "thistle")
plot(c(100, 250), c(300, 450), type = "n", xlab = "", ylab = "")
png("more/screen.png")
plot(c(100, 250), c(300, 450), type = "n", xlab = "", ylab = "")
op <- par(bg = "thistle")
plot(c(100, 250), c(300, 450), type = "n", xlab = "", ylab = "")
a = png("more/screen.png")
op <- par(bg = "thistle")
plot(c(100, 250), c(300, 450), type = "n", xlab = "", ylab = "")
image <- as.raster(matrix(0:1, ncol = 5, nrow = 3))
require(grDevices)#
#
op <- par(bg = "thistle")#
plot(c(100, 250), c(300, 450), type = "n", xlab = "", ylab = "")#
image <- as.raster(matrix(0:1, ncol = 5, nrow = 3))#
rasterImage(image, 100, 300, 150, 350, interpolate = FALSE)#
rasterImage(image, 100, 400, 150, 450)#
rasterImage(image, 200, 300, 200 + xinch(.5), 300 + yinch(.3),#
            interpolate = FALSE)#
rasterImage(image, 200, 400, 250, 450, angle = 15, interpolate = FALSE)#
par(op)
A = matrix(nrow = 4, ncol = 3)
A
sp = c(nombre.comun,nombre.cientifico)#
is.vector(sp)
nombre.comun = "Puma"
nombre.cientifico = "Puma concolor"
sp = c(nombre.comun,nombre.cientifico)#
is.vector(sp)
n = 4
m = 5
data = data.frame(nombre.comun = nombre.comun,nombre.cientifico = nombre.cientifico,n.sitios = n,observaciones.sitio.1 = m)
data
is.data.frame()
is.data.frame(data)
x
x = n + t
x
n
t
t = vector(length = 4)
t[1] = 2010#
t[2] = 2011#
t[3] = 2012#
t[4] = 2013
x = n + t
x
sp2 = c("Elefante","Elefante")
registro2 = c(sp2,n,x)
registro2
data = cbind(data,registro2)
data
data = c(data,registro2)
data = data.frame(nombre.comun = nombre.comun,nombre.cientifico = nombre.cientifico,n.sitios = n,observaciones.sitio.1 = m)
data = c(data,registro2)
data
data = data.frame(nombre.comun = nombre.comun,nombre.cientifico = nombre.cientifico,n.sitios = n,observaciones.sitio.1 = m)
data
data = c(data,registro2)
data
class(registro29
class(registro2)
registro2 = as.vector(registro2)
class(registro2)
registro2
registro2 = as.data.frame(registro2)
data = cbind(data,registro2)
data
registro2
registro2 = t(registro2)
registro2
x
c(n,x)
y = c(n,x)
class(y)
registro2 = cbind(sp2,y)
registro2 = rbind(sp2,y)
sp2
y
data = data.frame(4,nombre.comun = nombre.comun,nombre.cientifico = nombre.cientifico,n.sitios = n,observaciones.sitio.1 = m)
data
data = data.frame(nrow = 4,nombre.comun = nombre.comun,nombre.cientifico = nombre.cientifico,n.sitios = n,observaciones.sitio.1 = m)
data
data[2,]
data = data.frame(nombre.comun = nombre.comun,nombre.cientifico = nombre.cientifico,n.sitios = n,observaciones.sitio.1 = m)
data[2,]
data[2,] = as.data.frame(c(sp2,n,x))
c(sp2,n,x)
registro2 = c(sp2,as.numeric(n),as.numeric(x))
registro2
registro2 = cbind(sp2,as.numeric(n),as.numeric(x))
registro2
registro2 = rbind(sp2,as.numeric(n),as.numeric(x))
registro2
cat(sp2,n,x)
data[,2] = cat(sp2,n,x)
data
data = data.frame(nombre.comun = nombre.comun,nombre.cientifico = nombre.cientifico,n.sitios = n,observaciones.sitio.1 = m)
cat(sp2,n,x)
data[,2] = cat(sp2,n,x)
data
data = data.frame(nombre.comun = nombre.comun,nombre.cientifico = nombre.cientifico,n.sitios = n,observaciones.sitio.1 = m)
data
data = data.frame(nrownombre.comun = nombre.comun,nombre.cientifico = nombre.cientifico,duracion = n,fecha.1 = t[1],fecha.2 = t[2],fecha.3 = t[3],fecha.4 = t[4])
data
data[,2] = cat(sp2,n,x)
data
data[,2]
data
data[2,] = cat(sp2,n,x)
as.vector(cat(sp2,n,x))
c(sp2,n,x)
list(sp2,n,x)
rbind(sp2,n,x)
rbind(sp2,n)
cbind(sp2,n)
data = as.data.frame(matrix(nrow = 4,ncol = 6))#
is.data.frame(data)
data[1:2,1] = sp1
sp1 = c(nombre.comun,nombre.cientifico)
data[1:2,1] = sp1
data
require(prob)
EM = urnsamples(c("R","R","R","B","B","B"),2,replace = F,order = F)
EM
EM = urnsamples(c("R","R","R","B","B","B"),2,replace = F,order = T)
EM
subset(EM,X1 == "R" & X2 == "R")
nrow(subset(EM,X1 == "R" & X2 == "R"))/nrow(EM)
A = subset(EM,X1 == “R”)
A = subset(EM,X1 == "R")
PA = nrow(A)/nrow(EM)
PA
PAnB/PA
PAnB = nrow(AnB)/nrow(EM)
AnB = subset(EM,X1 == "R" & X2 == "R”)
AnB = subset(EM,X1 == "R" & X2 == "R”)
AnB = subset(EM,X1 == "R" & X2 == “R")
AnB = subset(EM,X1 == "R" & X2 == “R")
AnB = subset(EM,X1 == "R" & X2 == ""R")
AnB = subset(EM,X1 == "R" & X2 == ""R")
AnB = subset(EM,X1 == "R" & X2 == "R")
AnB
PAnB = nrow(AnB)/nrow(EM)
A = subset(EM,X1 == “R”)
A = subset(EM,X1 == "R")
PA = nrow(A)/nrow(EM)
PAnB/PA
PA
A
AnB
PA = nrow(A)/nrow(EM)
PA
PAnB = nrow(AnB)/nrow(EM)
PAnB
1/2*2/5
P(B|A)
1/2*2/5
1/2*2/5/1/2
1/2*2/5/(1/2)
(1/2)*(2/5)/(1/2)
PAnB/PA
PAnB/PA
EM = urnsamples(bolas,2,replace = FALSE,order = TRUE)
bolas = c("R","R","R","B","B","B”)
bolas = c("R","R","R","B","B","B")
bolas = c("R","R","R","B","B","B")
parcelas=c("L","L","L","L","L","S","S","S","S","S","F","F","F","F","F","C","C","C","C","C")#
EM=urnsamples(parcelas,4,replace=FALSE,order=TRUE)
dim(EM)
parcelas=c("L","L","L","L","L","S","S","S","S","S","F","F","F","F","F","C","C","C","C","C")#
EM=urnsamples(parcelas,4,replace=FALSE,order=FALSE)
dim(EM)
parcelas=c("L","L","L","L","L","S","S","S","S","S","F","F","F","F","F","C","C","C","C","C")#
EM=urnsamples(parcelas,4,replace=FALSE,order=TRUE)
parcelas=c("L","L","L","L","L","S","S","S","S","S","F","F","F","F","F","C","C","C","C","C")#
EM2=urnsamples(parcelas,4,replace=FALSE,order=FALSE)
S=subset(EM,X1=="S")
S2=subset(EM2,X1=="S")
nrow(S)/nrow(EM)
nrow(S2)/nrow(EM2)
head(EM)
head(EM2)
EM3=urnsamples(parcelas,1,replace=FALSE,order=TRUE)
S3=subset(EM3,X1=="S")
EM·
EM3
S3=subset(EM3,OUT=="S")
S3=subset(EM3,out=="S")
nrow(S)/nrow(EM)
EM3=urnsamples(parcelas,1,replace=FALSE,order=FALSE)
S3=subset(EM3,out=="S")
nrow(S)/nrow(EM)
bases=c("A","T","C","G")
urnsamples(bases,size=3,replace=TRUE,order=TRUE)
EM=urnsamples(bases,size=3,replace=TRUE,order=TRUE)
T=subset(EM,X1=="T"|X2=="T"|X3=="T")
T
C=subset(EM,X1=="C"|X2=="C"|X3=="C")
G=subset(EM,X1=="G"|X2=="G"|X3=="G")
PTUCUG = union(T,union(C,G))
Ad=subset(EM,X1=="A"& X2=="A"|X1=="A"&X3=="A"|X2=="A"&X3=="A")
Gu=subset(EM,X1=="G"& X2=="G"|X1=="G"&X3=="G"|X2=="G"&X3=="G")
AduGu=union(Ad,Gu)
TinCi=subset(EM,X1=="T"&X2=="C")
nrow(TinCi)
PTinCi=nrow(TinCi)/nrow(EM)
PTinCi
PTuCuG=nrow(TuCuG)/nrow(EM)
PTuCuG=nrow(PTUCUG)/nrow(EM)
PTuCuG
PTUCUG
AduGu=union(Ad,Gu)
AduGu
TinCi
bases=c("A","T","C","G")#
bases#
urnsamples(bases,size=3,replace=TRUE,order=TRUE)#
EM=urnsamples(bases,size=3,replace=TRUE,order=TRUE)#
EM#
T=subset(EM,X1=="T"|X2=="T"|X3=="T")#
T#
C=subset(EM,X1=="C"|X2=="C"|X3=="C")#
C#
G=subset(EM,X1=="G"|X2=="G"|X3=="G")#
G#
A=subset(EM,X1=="A"|X2=="A"|X3=="A")#
A#
nrow(T)#
nrow(C)#
nrow(G)#
union(T,C,G)#
TuCuG=union(T,C,G)#
TuCuG=union(T,C,G)#
TuCuG
ADE=subset(EM,X1=="A"& X2=="A"|X1=="A"&X3=="A"|X2=="A"&X3=="A")#
ADE#
GUA=subset(EM,X1=="G"& X2=="G"|X1=="G"&X3=="G"|X2=="G"&X3=="G")#
GUA#
nrow(ADE)#
nrow(GUA)#
ADEuGUA=union(ADE,GUA)#
ADEuGUA#
PADEuGUA=nrow(ADEuGUA)/nrow(EM)#
PADEuGUA
TIMnCIT=subset(EM,X1=="T"&X2=="C")#
TIMnCIT=subset(EM,X1=="T"&X2=="C")#
nrow(TIMnCIT)#
PTIMnCIT=nrow(TIMnCIT)/nrow(EM)#
PTIMnCIT
TIMnCIT
require(prob) #
factorial(4) #
permutations(4,4) #
nsamp(4,4,replace = FALSE,ordered = TRUE) #
nsamp(4,4,replace = TRUE,ordered = TRUE) #
permutations(4,4,repeats.allowed = TRUE) #
choose(6,3) #
#
nsamp(6,3,replace = FALSE,ordered = FALSE) #
#
#
combinations(6,3) #
choose(6+3-1,3) #
nsamp(6,3,replace = TRUE,ordered = FALSE) #
combinations(6,3,repeats.allowed = TRUE) #
#
#
#
#
#
#
#
#
#
#
#
#
#
Pf=c("f","f","f","f","f","f","f","f","f","f","sf","sf","sf","sf","sf","sf","sf","sf","sf","sf")#
#
Pl=c("luz","luz","luz","luz","luz","luz","luz","luz","luz","luz","sombra","sombra","sombra","sombra","sombra","sombra","sombra","sombra","sombra","sombra")#
#
EMPl=urnsamples(Pl,1,replace = FALSE,order = TRUE)#
#
PS=subset(EMPl, out=="sombra")#
nrow(PS)#
#
PCS=nrow(PS)/nrow(EMPl)#
#
#
#
EMPf=urnsamples(Pf,1,replace = FALSE,order = TRUE)#
#
PF=subset(EMPf, out=="f")#
#
PCF=nrow(PF)/nrow(EMPf)#
#
SnF=(nrow(PS)/20)*(nrow(PF)/20)#
#
SnF/PCS#
#
#
#
Adenona=subset(tripletes,X1 != "A" & X2 != "A" & X3 != "A")#
nrow(Adenona)#
#
nrow(Adenona)/nrow(EM)#
#
#
AdeGua=subset(tripletes,X1 == "A" & X2== "A" & X3 != "A" )#
AdeGuan=subset(tripletes,X1 != "A" & X2== "A" & X3 == "A" )#
AdeGuani=subset(tripletes,X1 == "A" & X2!= "A" & X3 == "A" )#
nrow(AdeGua)+nrow(AdeGuan)+nrow(AdeGuani)#
#
GA=subset(tripletes,X1 == "G" & X2== "G" & X3 != "G" )#
GAd=subset(tripletes,X1 != "G" & X2== "G" & X3 == "G" )#
GAni=subset(tripletes,X1 == "G" & X2!= "G" & X3 == "G" )#
nrow(GA)+nrow(GAd)+nrow(GAni)#
#
nrow(AdeGua)+nrow(AdeGuan)+nrow(AdeGuani)+nrow(GA)+nrow(GAd)+nrow(GAni)#
#
PAD=nrow(AdeGua)+nrow(AdeGuan)+nrow(AdeGuani)+nrow(GA)+nrow(GAd)+nrow(GAni)#
#
PAD/nrow(EM)#
#
#
TnC=subset(tripletes,X1=="T" & X2=="C")#
#
PTnC=nrow(TnC)/nrow(tripletes)#
#
Tim=subset(tripletes,X1=="T")#
#
PTim=nrow(Tim)/nrow(EM)#
#
PTnC/PTim
require(combn)
require(combinat)
require(prob) #
factorial(4) #
permutations(4,4) #
nsamp(4,4,replace = FALSE,ordered = TRUE) #
nsamp(4,4,replace = TRUE,ordered = TRUE) #
permutations(4,4,repeats.allowed = TRUE) #
choose(6,3) #
#
nsamp(6,3,replace = FALSE,ordered = FALSE) #
#
#
combinations(6,3) #
choose(6+3-1,3) #
nsamp(6,3,replace = TRUE,ordered = FALSE) #
combinations(6,3,repeats.allowed = TRUE) #
#
#
#
#
#
#
#
#
#
#
#
#
#
Pf=c("f","f","f","f","f","f","f","f","f","f","sf","sf","sf","sf","sf","sf","sf","sf","sf","sf")#
#
Pl=c("luz","luz","luz","luz","luz","luz","luz","luz","luz","luz","sombra","sombra","sombra","sombra","sombra","sombra","sombra","sombra","sombra","sombra")#
#
EMPl=urnsamples(Pl,1,replace = FALSE,order = TRUE)#
#
PS=subset(EMPl, out=="sombra")#
nrow(PS)#
#
PCS=nrow(PS)/nrow(EMPl)#
#
#
#
EMPf=urnsamples(Pf,1,replace = FALSE,order = TRUE)#
#
PF=subset(EMPf, out=="f")#
#
PCF=nrow(PF)/nrow(EMPf)#
#
SnF=(nrow(PS)/20)*(nrow(PF)/20)#
#
SnF/PCS#
#
#
#
Adenona=subset(tripletes,X1 != "A" & X2 != "A" & X3 != "A")#
nrow(Adenona)#
#
nrow(Adenona)/nrow(EM)#
#
#
AdeGua=subset(tripletes,X1 == "A" & X2== "A" & X3 != "A" )#
AdeGuan=subset(tripletes,X1 != "A" & X2== "A" & X3 == "A" )#
AdeGuani=subset(tripletes,X1 == "A" & X2!= "A" & X3 == "A" )#
nrow(AdeGua)+nrow(AdeGuan)+nrow(AdeGuani)#
#
GA=subset(tripletes,X1 == "G" & X2== "G" & X3 != "G" )#
GAd=subset(tripletes,X1 != "G" & X2== "G" & X3 == "G" )#
GAni=subset(tripletes,X1 == "G" & X2!= "G" & X3 == "G" )#
nrow(GA)+nrow(GAd)+nrow(GAni)#
#
nrow(AdeGua)+nrow(AdeGuan)+nrow(AdeGuani)+nrow(GA)+nrow(GAd)+nrow(GAni)#
#
PAD=nrow(AdeGua)+nrow(AdeGuan)+nrow(AdeGuani)+nrow(GA)+nrow(GAd)+nrow(GAni)#
#
PAD/nrow(EM)#
#
#
TnC=subset(tripletes,X1=="T" & X2=="C")#
#
PTnC=nrow(TnC)/nrow(tripletes)#
#
Tim=subset(tripletes,X1=="T")#
#
PTim=nrow(Tim)/nrow(EM)#
#
PTnC/PTim
install.packages("gtools")
require(gtools)
require(prob) #
factorial(4) #
permutations(4,4) #
nsamp(4,4,replace = FALSE,ordered = TRUE) #
nsamp(4,4,replace = TRUE,ordered = TRUE) #
permutations(4,4,repeats.allowed = TRUE) #
choose(6,3) #
#
nsamp(6,3,replace = FALSE,ordered = FALSE) #
#
#
combinations(6,3) #
choose(6+3-1,3) #
nsamp(6,3,replace = TRUE,ordered = FALSE) #
combinations(6,3,repeats.allowed = TRUE) #
#
#
#
#
#
#
#
#
#
#
#
#
#
Pf=c("f","f","f","f","f","f","f","f","f","f","sf","sf","sf","sf","sf","sf","sf","sf","sf","sf")#
#
Pl=c("luz","luz","luz","luz","luz","luz","luz","luz","luz","luz","sombra","sombra","sombra","sombra","sombra","sombra","sombra","sombra","sombra","sombra")#
#
EMPl=urnsamples(Pl,1,replace = FALSE,order = TRUE)#
#
PS=subset(EMPl, out=="sombra")#
nrow(PS)#
#
PCS=nrow(PS)/nrow(EMPl)#
#
#
#
EMPf=urnsamples(Pf,1,replace = FALSE,order = TRUE)#
#
PF=subset(EMPf, out=="f")#
#
PCF=nrow(PF)/nrow(EMPf)#
#
SnF=(nrow(PS)/20)*(nrow(PF)/20)#
#
SnF/PCS#
#
#
#
Adenona=subset(tripletes,X1 != "A" & X2 != "A" & X3 != "A")#
nrow(Adenona)#
#
nrow(Adenona)/nrow(EM)#
#
#
AdeGua=subset(tripletes,X1 == "A" & X2== "A" & X3 != "A" )#
AdeGuan=subset(tripletes,X1 != "A" & X2== "A" & X3 == "A" )#
AdeGuani=subset(tripletes,X1 == "A" & X2!= "A" & X3 == "A" )#
nrow(AdeGua)+nrow(AdeGuan)+nrow(AdeGuani)#
#
GA=subset(tripletes,X1 == "G" & X2== "G" & X3 != "G" )#
GAd=subset(tripletes,X1 != "G" & X2== "G" & X3 == "G" )#
GAni=subset(tripletes,X1 == "G" & X2!= "G" & X3 == "G" )#
nrow(GA)+nrow(GAd)+nrow(GAni)#
#
nrow(AdeGua)+nrow(AdeGuan)+nrow(AdeGuani)+nrow(GA)+nrow(GAd)+nrow(GAni)#
#
PAD=nrow(AdeGua)+nrow(AdeGuan)+nrow(AdeGuani)+nrow(GA)+nrow(GAd)+nrow(GAni)#
#
PAD/nrow(EM)#
#
#
TnC=subset(tripletes,X1=="T" & X2=="C")#
#
PTnC=nrow(TnC)/nrow(tripletes)#
#
Tim=subset(tripletes,X1=="T")#
#
PTim=nrow(Tim)/nrow(EM)#
#
PTnC/PTim
tripletes = urnsamples(c("A","T","G","C"),3,replace = T,order = T)
Adenona=subset(tripletes,X1 != "A" & X2 != "A" & X3 != "A")
Adenona
tripletes
tripletes = urnsamples(c("A","T","G","C"),3,replace = T,order = T)
tripletes = urnsamples(c("A","T","G","C"),3,replace = T,order = T)
tripletes = urnsamples(c("A","T","G","C"),3,replace = TRUE,order = TRUE)
tripletes
Adenona=subset(tripletes,X1 != "A" & X2 != "A" & X3 != "A")
Adenona
AdeGua=subset(tripletes,X1 == "A" & X2== "A" & X3 != "A" )#
AdeGuan=subset(tripletes,X1 != "A" & X2== "A" & X3 == "A" )#
AdeGuani=subset(tripletes,X1 == "A" & X2!= "A" & X3 == "A" )
AdeGua
AdeGuan
AdeGuani
M = subset(tripletes,X1 == "A" | X2 == "A" | X3 == "A")#
M#
#
#
#
N = setdiff(tripletes,M)
N
M = subset(tripletes,X1 == "A" | X2 == "A" | X3 == "A")#
M#
#
#
#
N = setdiff(tripletes,M)
K = subset(tripletes,(X1 == "A" & (X2 == "A" | X3 == "A")) | (X2 == "A" & (X1 == "A" | X3 == "A")) | (X3 == "A" & (X2 == "A" | X1 == "A")))#
K
L = subset(tripletes,(X1 == "G" & (X2 == "G" | X3 == "G")) | (X2 == "G" & (X1 == "G" | X3 == "G")) | (X3 == "G" & (X2 == "G" | X1 == "G")))#
L
union(K,L)
nrow(union(K,L))/nrow(tripletes)
factorial(6)/(factorial(3)*factorial(6-3))
choose(6,3)
nrow(BnA)/nrow(EM)/(PA = nrow(A)/nrow(EM))
BNA = K
nrow(BnA)/nrow(EM)/(PA = nrow(A)/nrow(EM))
BnA = K
nrow(BnA)/nrow(EM)/(PA = nrow(A)/nrow(EM))
bases=c("A","G","T","C") #
EMB=urnsamples(bases,3,replace=TRUE,order=TRUE)
subset(EMB,(X1=="A"& X2=="A") | ( X1=="A"&X3=="A") |(X2=="A"&X3=="A"))
parcelas = c("LF","LF","LF","LF","LF","LC","LC","LC","LC","LC","SF","SF","SF","SF","SF","SC","SC","SC","SC","SC")
EM = urnsamples(parcelas,1,replace = FALSE,order = TRUE)
EM
A = subset(EM,out == "SF" | out == "SC")
PA = nrow(A)/nrow(EM)
PA
AnB = subset(EM2,out == "SF")
AnB = subset(EM,out == "SF")
AnB
PAnB = nrow(AnB)/nrow(EM)
PA
PBdadoA = PAnB/PA
PBdadoA
